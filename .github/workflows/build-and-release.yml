name: Build and Release
on:
  workflow_dispatch:
  push:
    branches:
      - "main"

permissions:
  contents: write
  pull-requests: write
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: Build image
    runs-on: ubuntu-latest
    outputs:
      meta-tag: ${{ steps.meta.outputs.tags }}
    steps:
      - id: repository_string
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ github.repository }}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ steps.repository_string.outputs.lowercase }}:${{ github.sha }}
          build-args: |
            OTEL_OPTS=-javaagent:/usr/app/grafana-opentelemetry-java.jar
            OTEL_EXPORTER_OTLP_ENDPOINT=http://grafana-k8s-monitoring-alloy.remote-falcon-grafana.svc.cluster.local:4317
            OTEL_EXPORTER_OTLP_PROTOCOL=grpc
            OTEL_SERVICE_NAME=remote-falcon-control-panel
            OTEL_RESOURCE_ATTRIBUTES=deployment.environment=production
  release-production:
    name: Release Production
    environment: prod
    needs: [build-and-push]
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - id: repository_string
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ github.repository }}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: cschleiden/replace-tokens@v1
        name: Replace tokens in manifest
        with:
          files: "./k8s/manifest.yml"
        env:
          Namespace: remote-falcon
          Application: remote-falcon-control-panel
          Version: ${{ github.sha }}
          Env: prod
          Replicas: 2
          Image: ${{ env.REGISTRY }}/${{ steps.repository_string.outputs.lowercase }}:${{ github.sha }}
          Requests.Memory: 2000Mi
          Requests.CPU: 500m
          Limits.Memory: 2250Mi
          Limits.CPU: 750m
          Host: remotefalcon.com

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 4fee5fb4-939b-4d7a-8eb0-1b31115a74dc

      - name: Kubectl apply
        run: kubectl apply -f ./k8s/manifest.yml

      - name: Kubectl rollout monitor
        run: kubectl rollout status deployment remote-falcon-control-panel --namespace remote-falcon
